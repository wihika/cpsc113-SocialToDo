extends layout

block content
  if isLogedIn
    header
        h1#header
            a(href="/user/logout") Log out
            |  | #{user[0].name}
    body#bodyLayout(onload="configTaskPage()")
        div.menu()
          // task create
          form(action="/task/create" , name='createtask',  method='post', class="login", accept-charset='utf-8')
            input(type='text', name='title', placeholder='Title', required, autofocus)
            input(type='text', name='description', placeholder='Description', required)
            input(type='text', name='collaborator1', placeholder='colaborator1@email.com')
            input(type='text', name='collaborator2', placeholder='colaborator2@email.com')
            input(type='text', name='collaborator3', placeholder='colaborator3@email.com')
            button(type='submit', value='Submit' class="submitButton")
                span(class="state") Submit
            button(type='button' onclick='closeCreateTaskForm()' value='Cancel' class="cancelButton")
                span(class="state") Cancel
        section
            center
                h1 Welcome, #{user[0].name}
                button#createTask(onclick="openCreateTaskForm()" class="taskButton")
                    span(class="state") Create task
                if errormsg
                    each error, i in errormsg
                        p(class="validation-error")=error
        section
            center
                each taskList, i in task
                    ul        
                        li
                            div(class="tasks-list-item")
                                p 
                                  span(class="task-title") Title: #{taskList.title}
                                p Description: #{taskList.description}
                                p Owner: #{taskList.colaborator0}
                                p Colaborators: 
                                    -var taskColaborator1 = taskList.colaborator1
                                    -var taskColaborator2 = taskList.colaborator2
                                    -var taskColaborator3 = taskList.colaborator3
                                    if taskColaborator1 != 'null'
                                        |#{taskList.colaborator1}
                                    if taskColaborator2 != 'null'
                                        |#{taskList.colaborator2}
                                    if taskColaborator3 != 'null'
                                        |#{taskList.colaborator3}
                                p
                                    -var owner = taskList.colaborator0
                                    -var userEmail = user[0].email
                                    if owner == userEmail
                                            // delete task
                                            form(name='deletetask', action='/task/delete', method='post', accept-charset='utf-8', class='taskForm')
                                                input(type="hidden", name='taskTitle' display='block', value='#{taskList.title}')
                                                input(type="hidden", name='taskDescription' display='block', value='#{taskList.description}')
                                                input(type="hidden", name='taskColaborator0' display='block', value='#{taskList.colaborator0}')
                                                input(type="hidden", name='taskId' display='block', value='#{taskList._id}')
                                                button(type='submit', class="taskRedFormButton delete-task")
                                                    span(class="state") Delete
                                    // update task
                                    form(name='updatetask', action='/task/complete', method='post', accept-charset='utf-8', class='taskForm complete-task')
                                        input(type="hidden", name='taskTitle' display='block', value='#{taskList.title}')
                                        input(type="hidden", name='taskDescription' display='block', value='#{taskList.description}')
                                        input(type="hidden", name='taskColaborator0' display='block', value='#{taskList.colaborator0}')
                                        input(type="hidden", name='taskState' display='block', value='#{taskList.state}')
                                        input(type="hidden", name='taskId' display='block', value='#{taskList._id}')
                                        if taskList.state
                                            button(type='submit', class="taskGreenFormButton toggle-task")
                                                span(name = "taskState", class="state") Complete
                                        else
                                            button(type='submit', value='Done' class="taskRedFormButton toggle-task")
                                                span(name = "taskState", class="state") Not Complete
    script(type='text/javascript').
        function configTaskPage(){
            //var errormsg = "#{errormsg}";
            //if(errormsg.length > 0){
            //    alert(errormsg);
            //}
        }
        
        function closeCreateTaskForm() {
            $('.menu').animate({
                left: "-350px"
                }, 200);
        }
        
        function openCreateTaskForm() {
            $('.menu').animate({
                left: "37.37%"
                }, 200);
        }
    script(type='text/javascript' src='https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js')
  else
    body#bodyLayout(onload="configLogPage()")
      div.menu()
          // add user form
          form(class="login", name='adduser', action='/user/register', method='post', accept-charset='utf-8')
              input(type='text', name='fl_name', placeholder='first & last name')
              input(type='text', name='email', placeholder='email@email.com')
              input(type='password', name='password', placeholder='Password')
              input(type='password', name='password_confirmation', placeholder='Password confirmation')
              button(type='submit', value='Submit', class="submitButton sign-up-submit")
                span(class="state") Submit
              button(class="cancelButton", type='button' onclick='closeSignInForm()' value='Cancel', background="red")
                span(class="state") Cancel
  
      div#mainContent(class="wrapper")
        if errormsg
          each error, i in errormsg
            p(class="validation-error")=error
        // login form
        form#loginForm(action="/user/login", class="login", name="loginForm", method="post")
          p(class="title") Log in
          input#inputEmail(type="text", placeholder="Email", name="email", autofocus)
          i(class="fa")
          input#inputPassword(type="password", placeholder="Password", name="password")
          i(class="fa")
          button#btnSubmit(class="loginButton log-in-submit", type="submit")
            i(class="spinner")
            span(class="state") Log in
          button#btnSignin(class="signinButton", type="button", onclick="openSignInForm()")
            i(class="spinner")
            span(class="state") Sign up
    footer
      a(href="/user/logout") Log out
    script(type='text/javascript').
      function configLogPage(){
        //var errormsg = "#{errormsg}";
        //if(errormsg.length > 0){
        //  alert(errormsg);
        //}
      }
      
      function closeSignInForm() {
        $('.menu').animate({
            left: "-350px"
        }, 200);
      }
      
      function openSignInForm() {
          $('.menu').animate({
              left: "37.37%"
          }, 200);
      }
    
    script(type='text/javascript' src='https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js')